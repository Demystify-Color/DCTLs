/*
	Photometrically Accurate Exposure Tool For Arri Log-C
	Input & Output: ARRI Log-C (EI800)
	Written by Nico Wieseneder, www.demystify-color.com
	Learned a lot by studying DCTLs from Paul Dore: https://github.com/baldavenger/
*/


//Arri Log-C (EI800) To Linear

__DEVICE__ float logc_2_lin( float in)
{
	float out = in > 0.1496582f ? (_powf(10.0f, (in - 0.385537f) / 0.2471896f) - 0.052272f) / 5.555556f : (in - 0.092809f) / 5.367655f;
	return out;
}

__DEVICE__ float3 logc_to_lin( float3 in)
{
	float3 out;
	
	out.x = logc_2_lin(in.x);
	out.y = logc_2_lin(in.y);
	out.z = logc_2_lin(in.z);
	
	return out;
}


//Linear To Arri Log-C (EI800)

__DEVICE__ float lin_2_logc( float in)
{
	float out = in > 0.010591f ? 0.24719f * _log10f(5.555556f * in + 0.052272f) + 0.385537f : 5.367655f * in + 0.092809f;
	return out;
}

__DEVICE__ float3 lin_to_logc( float3 in)
{
	float3 out;
	
	out.x = lin_2_logc(in.x);
	out.y = lin_2_logc(in.y);
	out.z = lin_2_logc(in.z);
	
	return out;
}


DEFINE_UI_PARAMS(exposure, Exposure, DCTLUI_SLIDER_FLOAT, 0.0, -4.0, 4.0, 0.1)

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{

	float3 rgb = make_float3(p_R, p_G, p_B);

	rgb = logc_to_lin(rgb);

	rgb.x = rgb.x * _exp2f(exposure);
	rgb.y = rgb.y * _exp2f(exposure);
	rgb.z = rgb.z * _exp2f(exposure);

	rgb = lin_to_logc(rgb);

	return rgb;
}